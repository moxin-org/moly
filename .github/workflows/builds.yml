name: Builds

concurrency:
  group: ${{ github.workflow }}-${{ github.head_ref || github.ref }}
  cancel-in-progress: true

on:
  push:
    branches:
      - "main"
      - "dev"
    paths-ignore:
      - "**/*.md"
  pull_request:
    branches:
      - "main"
      - "dev"
    paths-ignore:
      - "**/*.md"

jobs:
  build_ubuntu:
    name: Ubuntu
    runs-on: ubuntu-22.04
    steps:
      - name: Checkout sources
        uses: actions/checkout@v4

      - name: Install dependencies
        run: |
          sudo apt-get update
          sudo apt-get install libssl-dev pkg-config llvm clang libclang-dev binfmt-support libxcursor-dev libx11-dev libasound2-dev libpulse-dev

      - name: Install Rust-stable
        uses: dtolnay/rust-toolchain@stable
        with:
          toolchain: 1.85

      - name: Cache
        uses: Swatinem/rust-cache@v2

      - name: Build
        run: |
          cargo build

      - name: Test Moly
        run: |
          cargo test --all-features

      - name: Test Moly Kit
        run: |
          cargo test --all-features --package moly-kit

      - name: Build before-packaging-command
        run: |
          cargo build --manifest-path packaging/before-packaging-command/Cargo.toml

  build_macos:
    name: MacOS
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        # `macos-13` has intel architecture, while from `macos-14` onwards, arm64 is used.
        os: [macos-14, macos-13]

    steps:
      - name: Checkout sources
        uses: actions/checkout@v4

      - name: Install Rust-stable
        uses: dtolnay/rust-toolchain@stable
        with:
          toolchain: 1.85

      - name: Cache
        uses: Swatinem/rust-cache@v2

      - name: Build
        run: |
          cargo build

      - name: Test Moly
        run: |
          cargo test --all-features

      - name: Test Moly Kit
        run: |
          cargo test --all-features --package moly-kit

      - name: Build before-packaging-command
        run: |
          cargo build --manifest-path packaging/before-packaging-command/Cargo.toml

  build_windows:
    name: Windows
    runs-on: windows-2022
    steps:
      - name: Checkout sources
        uses: actions/checkout@v4

      - name: Install Rust-stable
        uses: dtolnay/rust-toolchain@stable
        with:
          toolchain: 1.85

      - name: Cache
        uses: Swatinem/rust-cache@v2

      - name: Build
        run: |
          cargo build

      - name: Test Moly
        run: |
          cargo test --all-features

      - name: Test Moly Kit
        run: |
          cargo test --all-features --package moly-kit

      - name: Build before-packaging-command
        run: |
          cargo build --manifest-path packaging/before-packaging-command/Cargo.toml

  build_web:
    name: Web
    runs-on: ubuntu-latest
    steps:
      - name: Checkout sources
        uses: actions/checkout@v4

      - name: Install Rust-stable
        uses: dtolnay/rust-toolchain@stable
        with:
          toolchain: 1.85
          targets: wasm32-unknown-unknown

      - name: Cache
        uses: Swatinem/rust-cache@v2

      - name: Build
        run: |
          cargo build --target wasm32-unknown-unknown

      - name: Test Moly
        run: |
          cargo test --all-features --target wasm32-unknown-unknown

      - name: Test Moly Kit
        run: |
          cargo test --all-features --package moly-kit --target wasm32-unknown-unknown
