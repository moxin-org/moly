name: Release

concurrency:
  group: ${{ github.workflow }}-${{ github.head_ref || github.ref }}
  cancel-in-progress: true

on:
  workflow_dispatch:
    inputs:
      build_ubuntu:
        description: "Build Ubuntu"
        required: false
        default: "true"
      build_macos:
        description: "Build MacOS"
        required: false
        default: "true"
      build_windows:
        description: "Build Windows"
        required: false
        default: "true"
      release_tags:
        description: "Release Page Tags"
        required: true

jobs:
  build_ubuntu:
    name: Ubuntu
    runs-on: ${{ matrix.os }}
    if: ${{ github.event.inputs.build_ubuntu == 'true' }}
    strategy:
      matrix:
        os: [ubuntu-22.04]
        rust: [1.81]

    steps:
      - name: Checkout sources
        uses: actions/checkout@v3

      - name: Install dependencies
        run: |
          sudo apt-get update
          sudo apt-get install libssl-dev pkg-config llvm clang libclang-dev binfmt-support libxcursor-dev libx11-dev libasound2-dev libpulse-dev

      - name: Install Rust-stable
        uses: dtolnay/rust-toolchain@stable
        with:
          toolchain: ${{ matrix.rust }}

      - name: Install cargo-packager
        run: |
          cargo +stable install --force --locked cargo-packager

      - name: Build
        run: |
          cargo packager --release --verbose
          ls dist/

      - name: Upload Dist
        env:
          GITHUB_TOKEN: ${{ secrets.MOLY_RELEASE }}
        run: |
          cd dist/
          gh release upload ${{ github.event.inputs.release_tags }} moly_*.deb --clobber
          gh release upload ${{ github.event.inputs.release_tags }} moly_*.tar.gz --clobber
          gh release upload ${{ github.event.inputs.release_tags }} moly_*.AppImage --clobber

  build_macos:
    name: MacOS
    runs-on: ${{ matrix.os }}
    if: ${{ github.event.inputs.build_macos == 'true' }}
    strategy:
      matrix:
        os: [macos-14, macos-13]
        rust: [1.81]

    steps:
      - name: Checkout sources
        uses: actions/checkout@v3

      - name: Install Rust-stable
        uses: dtolnay/rust-toolchain@stable
        with:
          toolchain: ${{ matrix.rust }}

      - name: Install cargo-packager
        run: |
          cargo +stable install --force --locked cargo-packager

      - name: Build
        run: |
          cargo packager --release --verbose
          ls dist/

      - name: Upload Dist
        env:
          GITHUB_TOKEN: ${{ secrets.MOLY_RELEASE }}
        run: |
          cd dist/
          gh release upload ${{ github.event.inputs.release_tags }} Moly_*.dmg --clobber

  build_windows:
    name: Windows
    runs-on: windows-2022
    if: ${{ github.event.inputs.build_windows == 'true' }}
    strategy:
      matrix:
        rust: [1.81]
    steps:
      - name: Checkout sources
        uses: actions/checkout@v3

      - name: Install Rust-stable
        uses: dtolnay/rust-toolchain@stable
        with:
          toolchain: ${{ matrix.rust }}

      - name: Install cargo-packager
        run: |
          cargo +stable install --force --locked cargo-packager

      - name: Build
        run: |
          cargo packager --release --formats nsis --verbose
          ls dist/
      - name: Upload Dist
        env:
          GITHUB_TOKEN: ${{ secrets.MOLY_RELEASE }}
        run: |
          cd dist/
          $file=Get-ChildItem -Filter *.exe
          gh release upload ${{ github.event.inputs.release_tags }} $file.name --clobber
