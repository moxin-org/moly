name: Continuous integration

concurrency:
  group: ${{ github.workflow }}-${{ github.head_ref || github.ref }}
  cancel-in-progress: true

on:
  push:
    branches:
      - "main"
      - "dev"
    paths-ignore:
      - "**/*.md"
  pull_request:
    branches:
      - "main"
      - "dev"
    paths-ignore:
      - "**/*.md"

jobs:
  build_ubuntu:
    name: Ubuntu
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-22.04]
        rust: [1.81]
    env:
      LD_LIBRARY_PATH: ~\.wasmedge\lib

    steps:
      - name: Checkout sources
        uses: actions/checkout@v3

      - name: Install WasmEdge
        run: |
          curl -sSf https://raw.githubusercontent.com/WasmEdge/WasmEdge/master/utils/install_v2.sh | bash -s -- --version=0.14.1
          source $HOME/.wasmedge/env
      - name: Install dependencies
        run: |
          sudo apt-get update
          sudo apt-get install libssl-dev pkg-config llvm clang libclang-dev binfmt-support libxcursor-dev libx11-dev libasound2-dev libpulse-dev

      - name: Install Rust-stable
        uses: dtolnay/rust-toolchain@stable
        with:
          toolchain: ${{ matrix.rust }}

      - name: Build
        run: |
          cargo build

      - name: Build before-packaging-command
        run: |
          cargo build --manifest-path packaging/before-packaging-command/Cargo.toml

  build_macos:
    name: MacOS
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [macos-14, macos-13]
        rust: [1.81]

    steps:
      - name: Checkout sources
        uses: actions/checkout@v3

      - name: Install WasmEdge
        run: |
          curl -sSf https://raw.githubusercontent.com/WasmEdge/WasmEdge/master/utils/install_v2.sh | bash -s -- --version=0.14.1
          source $HOME/.wasmedge/env

      - name: Install Rust-stable
        uses: dtolnay/rust-toolchain@stable
        with:
          toolchain: ${{ matrix.rust }}

      - name: Build
        run: |
          cargo build

      - name: Build before-packaging-command
        run: |
          cargo build --manifest-path packaging/before-packaging-command/Cargo.toml

  build_windows:
    name: Windows
    runs-on: windows-2022
    strategy:
      matrix:
        rust: [1.81]
    env:
      WASMEDGE_DIR: ${{ github.workspace }}\WasmEdge-0.14.1-Windows
    steps:
      - name: Display ENV
        run: |
          echo $env:WASMEDGE_DIR

      - name: Checkout sources
        uses: actions/checkout@v3

      - name: Download WasmEdge
        run: |
          $ProgressPreference = 'SilentlyContinue'
          Invoke-WebRequest -Uri "https://github.com/WasmEdge/WasmEdge/releases/download/0.14.1/WasmEdge-0.14.1-windows.zip" -OutFile "WasmEdge-0.14.1-windows.zip"
          Expand-Archive -LiteralPath "WasmEdge-0.14.1-windows.zip" -DestinationPath ${{ github.workspace }}
          tree /F ${{ github.workspace }}\WasmEdge

      - name: Set up Windows 10 SDK
        uses: GuillaumeFalourd/setup-windows10-sdk-action@v2
        with:
          sdk-version: 20348

      - name: Install Rust-stable
        uses: dtolnay/rust-toolchain@stable
        with:
          toolchain: ${{ matrix.rust }}

      - name: Build
        run: |
          cargo build

      - name: Build before-packaging-command
        run: |
          cargo build --manifest-path packaging/before-packaging-command/Cargo.toml
